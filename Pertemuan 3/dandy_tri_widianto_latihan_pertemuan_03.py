# -*- coding: utf-8 -*-
"""Dandy Tri Widianto Latihan Pertemuan 03

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1POHKbXRcG30StsY8k89OXQ2JdnPeV0_5

Struktur Data dalam Python: Lists
"""

aList = ["John", 33, "Toronto", True]
print(aList)

"""Buatlah isi list dengan nama "Mahasiswa" yang berisi nama, NIM, prodi, mata kuliah, tanggal hari ini, nama universitas Tampilkan pada cell"""

import datetime as dt
tanggal = dt.date.today().strftime("%d-%m-%Y")
mahasiswa = ["nama", "24072001", "Prodi Informatika", "DAA", tanggal, "Universitas Pembangunan Jaya"]
print(mahasiswa)

# Cetak Mahasiswa dengan print Index
print(mahasiswa[5])
print(mahasiswa[2])
print(mahasiswa[0])

# Cetak dengan tambahan kata di depan index mahasiswa
print("Nim: ", mahasiswa[1])
print("Kampus: ", mahasiswa[5])

# List warna
bin_colors = ["Red", "Green", "Blue", "Yellow"]
bin_colors[1]

# List Slicing
bin_colors = ["Red", "Green", "Blue", "Yellow"]
bin_colors[1:4]

# Penerapan list slicing
print("Nim dan Prodi: ", mahasiswa[1:3])
print("Mata Kuliah tanggal berapa?: ", mahasiswa[3:5])
print("Kampus: ", mahasiswa[5:6])

# Menambahkan kata "Square" setelah warna
bin_colors = ["Red", "Green", "Blue", "Yellow"]
for aColor in bin_colors:
    print(aColor + " Square")

# Menambahkan kata UPJ di depan index mahasiswa
for mahasiswa in mahasiswa:
    print("UPJ " + mahasiswa)

# Tuple
tup_colors = ["Red", "Green", "Blue", "Yellow"]
tup_colors[2:]

# Susun Tuple bernama “UPJ”,  isi dengan Universitas, Pembangunan, Jaya
tup_colors = ["Universitas", "Pembangunan", "Jaya"]
tup_colors[0:]

# Nested Tuple
nested_tuple = ((100,), (200, 400, 600), (300,), (400, 800))
print(nested_tuple)

# Struktur Data dalam Python: Dictionary
bin_colors = {
    "manual_color": "Yellow",
    "approved_color": "Green",
    "refused_color": "Red"
}
print(bin_colors)

# Mengambil nilai dari dictionary
bin_colors.get("approved_color")

# Mengambil nilai dari dictionary
bin_colors["approved_color"]

# Memperbarui Nilai
bin_colors["approved_color"] = "Purple"
print(bin_colors)

# Latihan
# Membuat dictionary dengan key-value pairs
data_mahasiswa = {
    'Nama': 'Dandy Tri Widianto',
    'NIM': '2023071011',
    'Prodi': 'Informatika',
    'Universitas': 'UPJ'
}

# Mengakses nilai berdasarkan key
print("Nama mahasiswa:", data_mahasiswa['Nama'])
print("NIM mahasiswa:", data_mahasiswa['NIM'])
print("Program studi:", data_mahasiswa['Prodi'])
print("Universitas:", data_mahasiswa['Universitas'])

# Sets
green = {'grass', 'leaves'}
print(green)

# menambahkan data yang sama, apa yang terjadi?
green = {'grass', 'leaves', 'leaves'}
print(green)

# Latihan
yellow = {'dandelions', 'leaves', 'fire hydrant'}
red = {'rose', 'blood', 'leaves', 'fire hydrant'}
print(yellow|red)
print(yellow&red)

# Data Frame
import pandas as pd
df = pd.DataFrame([
    ['1', 'Fares', 32, True],
    ['2', 'Elena', 23, False],
    ['3', 'Steven', 40, True]])
df.columns = ['id', 'name', 'age', 'decision']
print(df)

# Seleksi kolom
df[['name', 'age']]

df.iloc[:,3]

# Row Selection
df.iloc[1:3,:]

df[df.age>30]

df[(df.age<35)&(df.decision==True)]

# Latihan
import pandas as pd
# Buat table dataframe
data = {
    "No": [1, 2, 3],
    "Prodi": ["Informatika", "Sistem Informasi", "Teknik Sipil"],
    "Mahasiswa": [50, 55, 40],
    "Laki-laki": [30, 30, 30],
    "Perempuan": [20, 25, 10]
}

# Membuat dataframe
mhs = pd.DataFrame(data)

# Tampilkan dataframe
print(mhs)

# Matrix
import numpy as np
myMatrix = np.array([[11, 12, 13], [21, 22, 23], [31, 32, 33]])
print(myMatrix)

print(type(myMatrix))

# Matrix Transpose
# Matriks awal
matrix = [
    [100, 200, 300],
    [700, 600, 500],
    [900, 1000, 1100]
]


matriks_transpose = [[row[i] for row in matrix] for i in range(len(matrix[0]))]

# Cetak matriks hasil transpose
for row in matriks_transpose:
    print(row)

# Vektor Menggunakan Python
myVector = [22, 33, 44, 55]
print(myVector)

print(type(myVector))

# Menggunakan Array numpy:
myVector = np.array([22, 33, 44, 55])
print(myVector)

print(type(myVector))